name: SonarQube Cloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    environment:
      name: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'  

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarQube Scanner for .NET
        run: | 
          cd src/  
          dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarQube analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd src
          dotnet-sonarscanner begin /k:"fiap-8soat-tc-one_tc-backend-s4-payment-gateway" /o:"fiap-8soat-tc-one" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

      - name: Restore dependencies
        run: |
          cd src
          dotnet restore

      - name: Build the project
        run: | 
          cd src
          dotnet build --configuration Release --no-restore

      - name: Run tests
        run: |
          cd src
          dotnet test --configuration Release --no-restore --no-build --logger trx --results-directory TestResults

      - name: Complete SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
